"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4071],{28404:e=>{e.exports=JSON.parse('{"functions":[{"name":"NextColumn","desc":"In a table, moves to the next available cell. if the current cell is in the last column,\\nthen the next cell will be the first column of the next row.\\n    ","params":[],"returns":[],"function_type":"static","source":{"line":1677,"path":"lib/API.lua"}},{"name":"SetColumnIndex","desc":"In a table, directly sets the index of the column.\\n    ","params":[{"name":"index","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":1690,"path":"lib/API.lua"}},{"name":"NextRow","desc":"In a table, moves to the next available row,\\nskipping cells in the previous column if the last cell wasn\'t in the last column\\n    ","params":[],"returns":[],"function_type":"static","source":{"line":1704,"path":"lib/API.lua"}}],"properties":[{"name":"Table","desc":"A layout widget which allows children to be displayed in configurable columns and rows.\\n\\n```lua\\nhasChildren = true\\nhasState = false\\nArguments = {\\n    NumColumns = number,\\n    RowBg = boolean? = false, -- whether the row backgrounds alternate a background fill.\\n    BordersOuter = boolean? = false,\\n    BordersInner = boolean? = false, -- borders on each cell.\\n}\\nEvents = {\\n    hovered: () -> boolean\\n}\\n```\\n    ","lua_type":"Iris.Table","tags":["Widget","HasChildren"],"source":{"line":1668,"path":"lib/API.lua"}}],"types":[],"name":"Table","desc":"Table Widget API\\n    ","source":{"line":1645,"path":"lib/API.lua"}}')}}]);