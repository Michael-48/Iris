local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Types = require(ReplicatedStorage.Iris.PubTypes)

return function(parent: GuiObject)
    local Iris: Types.Iris = require(ReplicatedStorage.Iris)
    local Input = require(script.Parent.UserInputService)

    Input.SinkFrame.Parent = parent

    Iris.Internal._utility.UserInputService = Input
    Iris.UpdateGlobalConfig({
        UseScreenGUIs = false,
    })
    Iris.Internal._utility.GuiOffset = Input.SinkFrame.AbsolutePosition
    Iris.Internal._utility.MouseOffset = Input.SinkFrame.AbsolutePosition
    Input.SinkFrame:GetPropertyChangedSignal("AbsolutePosition"):Connect(function()
        Iris.Internal._utility.GuiOffset = Input.SinkFrame.AbsolutePosition
        Iris.Internal._utility.MouseOffset = Input.SinkFrame.AbsolutePosition
    end)

    Iris.Init(parent)

    -- Actual Iris code here:
    Iris:Connect(Iris.ShowDemoWindow)

    Iris:Connect(function()
        Iris.Window({ "Plot Lines" })

        local Values = Iris.State({
            0.1852,
            0.0731,
            0.8821,
            0.9560,
            0.1963,
            0.0365,
            0.5835,
            0.7577,
            0.1462,
            0.9130,
            0.9195,
            0.4722,
            0.5557,
            0.1813,
            0.3879,
            0.7022,
            0.6820,
            0.4363,
            0.7544,
            0.7927,
            0.5544,
            0.7577,
            0.0372,
            0.9817,
            0.9142,
            0.5380,
            0.6004,
            0.6864,
            0.5606,
            0.0367,
            0.5335,
            0.7380,
            0.2494,
            0.5255,
            0.2573,
            0.4066,
            0.6958,
            0.1552,
            0.0732,
            0.1395,
            0.6948,
            0.3032,
            0.7505,
            0.5876,
            0.7558,
            0.1598,
            0.7980,
            0.7554,
            0.4493,
            0.2889,
            0.7407,
            0.4028,
            0.4523,
            0.9453,
            0.3867,
            0.1709,
            0.8736,
            0.0587,
            0.1821,
            0.8214,
            0.2288,
            0.7256,
            0.5739,
            0.7655,
            0.8725,
            0.0665,
            0.5583,
            0.1515,
            0.1044,
            0.2978,
            0.8915,
            0.0722,
            0.4868,
            0.6862,
            0.3808,
            0.6495,
            0.3668,
            0.7215,
            0.2921,
            0.5336,
            0.6275,
            0.6619,
            0.9985,
            0.0995,
            0.1941,
            0.1551,
            0.2974,
            0.0446,
            0.7461,
            0.8190,
            0.7933,
            0.8481,
            0.8579,
            0.3508,
            0.1917,
            0.7349,
            0.5257,
            0.0179,
            0.7295,
            0.2746,
            0.9708,
            0.6117,
            0.5018,
            0.6915,
            0.0977,
            0.1588,
            0.3793,
            0.2264,
            0.4687,
            0.4938,
            0.7557,
            0.0760,
            0.6103,
            0.5438,
            0.4655,
            0.7289,
            0.6918,
            0.9483,
            0.4133,
            0.1291,
            0.6648,
            0.5613,
            0.8824,
            0.6182,
            0.8188,
            0.7076,
            0.6106,
            0.8611,
            0.7054,
            0.3436,
            0.3496,
            0.5197,
            0.3196,
            0.1361,
            0.1044,
            0.3617,
            0.6175,
            0.5385,
            0.8368,
            0.1283,
            0.5144,
            0.8031,
            0.6684,
            0.8522,
            0.8549,
            0.5991,
            0.0876,
            0.5746,
            0.5026,
            0.2892,
            0.6110,
            0.4330,
            0.8117,
            0.3315,
            0.9094,
            0.3047,
            0.9058,
            0.9731,
            0.3727,
            0.4180,
            0.6717,
            0.5609,
            0.1089,
            0.3506,
            0.0419,
            0.2540,
            0.0071,
            0.0229,
            0.4806,
            0.1656,
            0.9275,
            0.2206,
            0.2132,
            0.3100,
            0.6702,
            0.6230,
            0.9315,
            0.4934,
            0.8754,
            0.9106,
            0.1954,
            0.3266,
            0.0394,
            0.3978,
            0.3148,
            0.4177,
            0.5439,
            0.4160,
            0.8797,
            0.6559,
            0.0276,
            0.5137,
            0.8828,
            0.4255,
            0.5852,
            0.7743,
            0.7943,
            0.3449,
            0.5953,
            0.1190,
            0.4550,
            0.5711,
            0.2483,
            0.1028,
            0.9655,
            0.7370,
            0.0797,
            0.6641,
            0.4738,
            0.5538,
            0.2572,
            0.2647,
            0.3451,
            0.0665,
            0.0700,
            0.6576,
            0.1266,
            0.7006,
            0.9497,
            0.7519,
            0.9499,
            0.2645,
            0.7515,
            0.6119,
            0.0474,
            0.1694,
            0.6457,
            0.7483,
            0.1026,
            0.6736,
            0.6193,
            0.3295,
            0.6018,
            0.0119,
            0.1287,
            0.3161,
            0.7082,
            0.8050,
            0.0553,
            0.2529,
            0.2019,
            0.0010,
            0.5659,
            0.8574,
            0.0427,
            0.2548,
            0.7407,
            0.5390,
            0.7974,
            0.6665,
            0.5483,
            0.3933,
            0.2711,
            0.0773,
            0.5526,
            0.8023,
        })
        local values: { number } = Values.value
        local top: number = values[1]
        table.remove(values, 1)
        table.insert(values, top)
        Values:set(values, true)
        Iris.PlotLines({ "40px Plot", 0, 1, 60 }, { values = Values })

        Iris.End()
    end)

    return function()
        Iris.Shutdown()

        for _, connection in Input._connections do
            connection:Disconnect()
        end

        Input.SinkFrame:Destroy()
    end
end
